name: Create Release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.new_version }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel

      - name: Compute next version
        id: version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_TAG=${LATEST_TAG#v}
          IFS='.' read -ra VERSION_PARTS <<< "$LATEST_TAG"
          MAJOR=${VERSION_PARTS[0]:-0}
          MINOR=${VERSION_PARTS[1]:-0}
          PATCH=${VERSION_PARTS[2]:-0}
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Next version will be: v$NEW_VERSION"

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      # Build Linux AMD64
      - name: Build Linux AMD64
        run: |
          pip install pyinstaller
          pip install -e .
          mkdir -p dist
          pyinstaller --onefile --name milady-linux-amd64 src/mcp_llm_bridge/main.py

      # Build Linux ARM64
      - name: Build Linux ARM64
        run: python build_binaries.py --platform arm64
        
      # Build Windows binary
      - name: Build Windows AMD64 binary
        uses: cross-platform-actions/action@v0.21.0
        with:
          operating_system: windows
          architecture: x86
          run: |
            python -m pip install --upgrade pip
            pip install pyinstaller
            pip install -e .
            mkdir -p dist
            pyinstaller --onefile --name milady-windows-amd64.exe src/mcp_llm_bridge/main.py

      # Build macOS AMD64 binary
      - name: Build macOS AMD64 binary
        uses: cross-platform-actions/action@v0.21.0
        with:
          operating_system: macos
          architecture: x86
          run: |
            python -m pip install --upgrade pip
            pip install pyinstaller
            pip install -e .
            mkdir -p dist
            pyinstaller --onefile --name milady-macos-amd64 src/mcp_llm_bridge/main.py
      
      # Create GitHub release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          files: dist/milady-*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}